"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[174],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9582:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:2},i="Using Realtime Mode",c={unversionedId:"getting-started/Using Realtime mode",id:"getting-started/Using Realtime mode",title:"Using Realtime Mode",description:"",source:"@site/i18n/ko/docusaurus-plugin-content-docs-scatterchart/current/getting-started/Using Realtime mode.md",sourceDirName:"getting-started",slug:"/getting-started/Using Realtime mode",permalink:"/pinpoint-fe-docs/ko/scatterchart/getting-started/Using Realtime mode",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"sb",previous:{title:"Using ScatterChart Component",permalink:"/pinpoint-fe-docs/ko/scatterchart/getting-started/Using ScatterChart Component"},next:{title:"Guide",permalink:"/pinpoint-fe-docs/ko/scatterchart/category/guide"}},s={},p=[],l={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"using-realtime-mode"},"Using Realtime Mode"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Create ScatterChart"',title:'"Create','ScatterChart"':!0},"import { ScatterChart } from '@pinpoint-fe/scatter-chart';\n\n// Set current date if necessary\nconst from = new Date().getTime();\nconst to = new Date().getTime() + 1000 * 60 * 5;\n\nSC.setOption({\n  axis: {\n    x: {\n      min: from,\n      max: to,\n    }\n  }\n})\n\n// Start realtime \nSC.startRealtime(to - from);\n\n// Render whenever you want. such as receiving a response from the server, etc.\n// `append` option must be `true`\nSC.render(data, { append: true })\n// Or you can do this. \nSC.setOption({ \n  render: { \n    append: true \n  }\n});\nSC.render(data)\n")))}u.isMDXComponent=!0}}]);