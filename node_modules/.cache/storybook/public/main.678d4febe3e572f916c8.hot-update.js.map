{"version":3,"file":"main.678d4febe3e572f916c8.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAHA;AAWA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAHA;AAZA;AAqBA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAlCA;AAuCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA","sources":["webpack://@pinpoint-fe/scatter-chart/./src/stories/ScatterChartStory.ts"],"sourcesContent":["import { ScatterChart } from \"../ui\";\n\nconst newScatterChart = (wrapper: HTMLElement) => {\n  return new ScatterChart(wrapper, {\n    axis: {\n      x: {\n        min: 1671684304000,\n        max: 1671687904000,\n        tick: {\n          count: 5,\n          format: (value) => {\n            const date = new Date(value);\n            return `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}`;\n          }, \n        }\n      },\n      y: {\n        min: 0,\n        max: 10000,\n        tick: {\n          count: 5,\n          format: (value) => value.toLocaleString(),\n        }\n      }\n    },\n    data: [\n      {\n        type: 'success',\n        color: 'green',\n        priority: 11,\n      },\n      {\n        type: 'fail',\n        color: 'red',\n        priority: 1,\n      },\n    ],\n    legend: {\n      formatLabel: (label) => label.toUpperCase(),\n      formatValue: (value) => value.toLocaleString(),\n    },\n  });\n}\n\nexport const createScatterChart = () => {\n  const wrapper = document.createElement('div');\n  setTimeout(() => {\n    newScatterChart(wrapper);\n  }, 500);\n  return wrapper;\n}\n\n\nexport const createScatterChartResizable = () => {\n  const wrapper = document.createElement('div');\n  const btnElemmtnt1 = document.createElement('button');\n  btnElemmtnt1.innerHTML = 'resize';\n  const btnElemmtnt2 = document.createElement('button');\n  btnElemmtnt2.innerHTML = 'resize 500 by 500';\n  \n  const SC = newScatterChart(wrapper);\n  setTimeout(() => {\n    \n    newScatterChart(wrapper);\n    wrapper.append(btnElemmtnt1);\n    wrapper.append(btnElemmtnt2);\n\n  }, 500);\n  return wrapper;\n}"],"names":[],"sourceRoot":""}