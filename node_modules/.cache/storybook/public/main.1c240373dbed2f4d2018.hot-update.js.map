{"version":3,"file":"main.1c240373dbed2f4d2018.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAHA;AAWA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAHA;AAZA;AAqBA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAlCA;AAuCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@pinpoint-fe/scatter-chart/./src/stories/templates/createAppendDatas.ts","webpack://@pinpoint-fe/scatter-chart/./src/stories/templates/createDefault.ts"],"sourcesContent":["import { ScatterChart } from \"../../ui\";\nimport { newScatterChart } from \"./createDefault\";\nimport data2 from '../mock/data2.json';\nimport data3 from '../mock/data3.json';\nimport data4 from '../mock/data4.json';\nimport data5 from '../mock/data5.json';\n\nexport const createAppendDatas = () => {\n  const wrapper = document.createElement('div');\n  const datas = [data2, data3, data4, data5];\n  setTimeout(() => {\n    const SC = newScatterChart(wrapper);\n    SC.setAxisOption({x: {min: 1669103462000, max: 1669103762000}});\n\n    const btn2 = document.createElement('button');\n    const btn3 = document.createElement('button');\n    const btn4 = document.createElement('button');\n    const btn5 = document.createElement('button');\n\n    [btn2, btn3, btn4, btn5].forEach((btnElement, i) => {\n      btnElement.innerText = `append data${i + 1}` \n      btnElement.addEventListener('click', () => {\n        SC.render(datas[i].data, {append: true});\n        btnElement.disabled = true;\n      })\n      wrapper.append(btnElement);\n    })\n  }, 500);\n  return wrapper;\n}\n","import { ScatterChart } from \"../../ui\";\nimport data1 from '../mock/data1.json';\n\nexport const newScatterChart = (wrapper: HTMLElement) => {\n  const SC = new ScatterChart(wrapper, {\n    axis: {\n      x: {\n        min: 1669103462000,\n        max: 1669103509335,\n        tick: {\n          count: 5,\n          format: (value) => {\n            const date = new Date(value);\n            return `${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}`;\n          }, \n        }\n      },\n      y: {\n        min: 0,\n        max: 10000,\n        tick: {\n          count: 5,\n          format: (value) => value.toLocaleString(),\n        }\n      }\n    },\n    data: [\n      {\n        type: 'success',\n        color: 'green',\n        priority: 11,\n      },\n      {\n        type: 'fail',\n        color: 'red',\n        priority: 1,\n      },\n    ],\n    legend: {\n      formatLabel: (label) => label.toUpperCase(),\n      formatValue: (value) => value.toLocaleString(),\n    },\n  });\n  SC.render(data1.data.map((d: any) => ({...d, x: d.x + data1.from})));\n  return SC\n}\n\nexport const createDefault = () => {\n  const wrapper = document.createElement('div');\n  setTimeout(() => {\n    newScatterChart(wrapper);\n  }, 500);\n  return wrapper;\n}\n"],"names":[],"sourceRoot":""}