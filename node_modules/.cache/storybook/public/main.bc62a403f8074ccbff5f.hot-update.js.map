{"version":3,"file":"main.bc62a403f8074ccbff5f.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AAAA;;AAAA;;AACA;AAEA;;AAAA;;AAAA;;AAAA;;AACA;;AACA;;AAFA;AAGA;;AANA;AAAA;AAAA;AASA;;AACA;AACA;AACA;AAZA;AAAA;AAAA;AAcA;;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;AACA;AACA;AAlCA;;AAAA;AAAA","sources":["webpack://@pinpoint-fe/scatter-chart/./src/ui/XAxis.ts"],"sourcesContent":["import { AXIS_INNER_PADDING, AXIS_TICK_LENGTH, TEXT_MARGIN_BOTTOM } from \"../constants/ui\";\nimport { drawLine, drawText } from \"../utils/draw\";\nimport { Axis, AxisProps } from \"./Axis\";\n\nexport interface XAxisProps extends AxisProps {};\n\nexport class XAxis extends Axis {\n  constructor({\n    ...props\n  }: XAxisProps = {}) {\n    super(props);\n    this.render();\n  }\n\n  public setSize(width: number, height: number){\n    super.setSize(width, height);\n    this.render();\n    return this;\n  }\n\n  public render() {\n    this.clear();\n    const { format, count } = this.tickOption;\n    const padding = this.padding;\n    const width = this.canvas.width / this.dpr;\n    const height = this.canvas.height / this.dpr;\n\n    const startX = padding.left + AXIS_INNER_PADDING;\n    const endX = width - padding.right - AXIS_INNER_PADDING;\n    const endY = height - padding.bottom; \n    const wGap = (endX - startX) / (count - 1);\n    const xTickGap = (this.max - this.min) / (count - 1);\n\n    [...Array(count)].forEach((_ , i) => {\n      const x = wGap * i + startX;\n      const label = format(xTickGap * i + this.min)\n      drawText(this.context, `${label}`, x, height - TEXT_MARGIN_BOTTOM, { textAlign: 'center', textBaseline: 'bottom' });\n      drawLine(this.context, x, endY, x, endY + AXIS_TICK_LENGTH);\n    })\n    drawLine(this.context, startX - AXIS_INNER_PADDING, endY, endX  + AXIS_INNER_PADDING, endY);\n  }\n}"],"names":[],"sourceRoot":""}